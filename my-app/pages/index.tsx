import * as React from "react";
import Head from 'next/head'
import {useState} from "react";

import CustomizedTablesMarket from "../UI/Table/TableMarket";
import CustomizedTablesBasket from "../UI/Table/TableBasket";
import CustomizedButtons from "../UI/Button/Button";

import {parseCookies} from "nookies";
import {wrapper} from "../redux/store";
import {productSliceAction} from "../redux/product/ProductsSlice";

import style from '../styles/index.module.scss'
import {useProductMarket} from "../hooks/useProductMarket";

const Index = () => {
  const [isDisabled, setIsDisabled] = useState<boolean>(false)
  const {isShowBtn, dragStartHandler, dragOverHandler, dropHandler, salesProduct, setIsShowBtn} = useProductMarket()

  return (
    <div className={style.wrapper}>
      <Head>
        <title>Products market</title>
        <meta name="description" content="Generated by create next app"/>
      </Head>
      <div className={style.wrapper_market}>
        <p className={style.wrapper_market_title}>Market</p>
        <CustomizedTablesMarket
          dragStartHandler={dragStartHandler}
        />
      </div>
      <div className={style.wrapper_basket}>
        <p className={style.wrapper_market_title}>Basket</p>
        <CustomizedTablesBasket
          setIsDisabled={setIsDisabled}
          setIsShowBtn={setIsShowBtn}
          dragOverHandler={dragOverHandler}
          dropHandler={dropHandler}
        />
        {isShowBtn &&
          <div className={style.wrapper_market_btn}>
            <CustomizedButtons
              disabled={isDisabled}
              backcolor='#079992'
              backcolorhover='#78e08f'
              title='Sell'
              onClick={salesProduct}
            />
          </div>}
      </div>
    </div>
  )
}

export default Index

export const getServerSideProps = wrapper.getServerSideProps(store => async (ctx) => {
  const response = await fetch('https://fakestoreapi.com/products?limit=6')
  const data = await response.json()
  const cookies = parseCookies(ctx)

  const dataBasketProduct = cookies.selectProduct ? await JSON.parse(cookies.selectProduct) : []
  const dataProduct = cookies.products ? await JSON.parse(cookies.products) : []
  const dataSaleProduct = cookies.saleProduct ? await JSON.parse(cookies.saleProduct) : []
  if (!dataProduct?.length && !dataBasketProduct?.length) {
    store.dispatch(productSliceAction.setProductMarket(data))
  } else {
    store.dispatch(productSliceAction.setProductMarket(dataProduct))
  }
  store.dispatch(productSliceAction.setProductBasket(dataBasketProduct))
  store.dispatch(productSliceAction.setProductSale(dataSaleProduct))

  return {props: {}}
})